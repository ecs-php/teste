<?php

namespace Application\Repositorio;
use Application\Entidade\QuestionOption;

/**
 * QuestionOptionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionOptionRepository extends \Doctrine\ORM\EntityRepository {
    public function doSave($objEntidade = null, $arrDados = []) {

        try {

            if (empty($objEntidade)) {
                $objEntidade = new QuestionOption();
            }



            $objQuestion = $this->getEntityManager()
                ->getRepository(\Application\Entidade\Question::class)
                ->findOneBy(
                    array(
                        'id' => $arrDados['question_id'],
                    )
                );

            if (!isset($arrDados['create_at'])) {
                $arrDados['create_at'] = date('Y-m-d H:i');

            }

            $objEntidade->setAnswer($arrDados['answer']);
            $objEntidade->setCreatedAt($arrDados['create_at']);
            $objEntidade->setIsCorrect($arrDados['is_correct']);
            $objEntidade->setUpdatedAt(date('Y-m-d H:i'));
            $objEntidade->setQuestion($objQuestion);

            $this->getEntityManager()
                ->persist($objEntidade);

            $this->getEntityManager()
                ->flush();

        } catch (\Exception $objException) {

            throw new \Exception($objException->getMessage(), 1);

        }

        return $objEntidade;

    }

    public function delete($objQuestion) {
        try {


            $this->getEntityManager()
                ->remove($objQuestion);

            $this->getEntityManager()
                ->flush();

        } catch (Exception $objException) {

            throw new \Exception($objException->getMessage(), 1);

        }

        return true;
    }
}
